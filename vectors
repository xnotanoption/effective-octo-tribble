#include <iostream>
#include <vector>

int main() {
   
  std::vector<double> subway_adult;
  
  // Declare another vector here:

  std::vector<double>subway_child;
   
}



//
#include <iostream>
#include <vector>

int main() {
   
  std::vector<double> subway_adult = {800, 1200, 1500};
  
  // Give subway_child some values:
  
  std::vector<double> subway_child={400,600,750};
  
}


//
#include <iostream>
#include <vector>

int main() {
  
  std::vector<std::string> last_jedi;
  
  // Add characters here:
  last_jedi.push_back("kylo");
  last_jedi.push_back("rey");
  last_jedi.push_back("luke");
  last_jedi.push_back("finn");
  
  
  std::cout << last_jedi[0] << " ";
  std::cout << last_jedi[1] << " ";
  std::cout << last_jedi[2] << " ";
  std::cout << last_jedi[3] << " ";
  
}



//
#include <iostream>
#include <vector>

int main() {
  
  std::vector<std::string> grocery = {"Hot Pepper Jam", "Dragon Fruit", "Brussel Sprouts"};
    
  // Add more 
  grocery.push_back("Artichoke");
  grocery.push_back("strawberry");
  grocery.push_back("apple");
  grocery.push_back("banana");

  std::cout<<grocery.size()<<"\n";
  
}





//galiba gerizekalıyım

#include <iostream>
#include <vector>
  
int main() {
  
  std::vector<double> delivery_order;
  
  delivery_order.push_back(8.99);
  delivery_order.push_back(3.75);
  delivery_order.push_back(0.99);
  delivery_order.push_back(5.99);
  
  // Calculate the total using a for loop:
  
  double total = 0.0;
  
  for (int i = 0; i < delivery_order.size(); i++) {

    total = total + delivery_order[i];
  
  }
  
  std::cout << "Total: $" << total << "\n";
    
}


//
#include <iostream>
#include <vector>
 
int main() {
 
  int total_even = 0;
  int product_odd = 1;
 
  std::vector<int> vector = {2, 4, 3, 6, 1, 9};
 
  for (int i = 0; i < vector.size(); i++) {
 
    if (vector[i] % 2 == 0) {
 
      total_even = total_even + vector[i];
 
    } else {
 
      product_odd = product_odd * vector[i];
 
    }
 
  }
 
  std::cout << "Sum of even: " << total_even << "\n";
  std::cout << "Product of odd: " << product_odd;
 
}


//.push_back()
.pop_back()
.size()
